---
const pageModel = {
  blocs: [
    {
      name: "cta",
      props: { title: "Title CTA TODO" },
    },
    {
      name: "content",
      props: {
        title: "Title Content TODO",
        subtitle: "Subtitle here",
        heading:
          "A new step into the Beyond. Start exporing space and near galaxies now !",
      },
    },
    {
      name: "feature",
      props: {},
    },
    {
      name: "content",
      props: { title: "Title Content TODO 2 !" },
    },
    {
      name: "newsletter",
      props: {},
    },
  ],
};

import ImportBloc from "../../components/ImportBloc.astro";

// const importElements = [...new Set(pageModel.blocs.map((bloc) => bloc.name))];
// const mapArray = await Promise.all(
//   importElements.map(async (item) => ({
//     [item]: (await import(`../../blocs/${item}.astro`)).default,
//   }))
// );

// @ts-ignore
// const blocsList = pageModel.blocs.map(({ name }) => mapArray[name]);

// const dynamicZoneComponents = ["Content"];

// const Card = (await import(`../../blocs/${dynamicZoneComponents[0]}.astro`))
//   .default;

// const Pages = (await import("../../blocs/CTA.astro")).default;

// const cmps = import.meta.glob("../../blocs/*.astro", { eager: true });
// const keys = Object.keys(cmps);
---

<html>
  <head>
    <meta charset="utf-8" />
  </head>
  <body>
    <!-- <Card /> -->

    <!-- <Pages /> -->

    {
      pageModel.blocs.map((b) => (
        <p>
          <ImportBloc cmp={b.name} props={b.props} />
        </p>
      ))
    }

    <!-- {JSON.stringify(keys || {})} -->

    <!-- <Content /> -->

    <script is:inline>
      const files = import.meta.glob("/src/core/widgets/*.svelte");

      var widgetsList = [];

      for await (const filePath of Object.keys(files)) {
        console.log(filePath);
        const module = await import(filePath);
        widgetsList.push(module);
      }
    </script>

    <style>
      body {
        font-family: Inter var, ui-sans-serif, system-ui, -apple-system,
          BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans,
          sans-serif, "Apple Color Emoji", "Segoe UI Emoji", Segoe UI Symbol,
          "Noto Color Emoji";
      }
    </style>
  </body>
</html>
